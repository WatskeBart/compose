name: keycloak-compose

networks:
  kcnet:
    name: kcnet

volumes:
  db-data:

secrets:
  server.crt:
    external: true
  server.key:
    external: true
  dbusername:
    external: true
  dbpassword:
    external: true
  dbname:
    external: true
  kcadminusername:
    external: true
  kcadminpassword:
    external: true

services:
  keycloak:
    #image: quay.io/keycloak/keycloak:26.2
    image: keycloak:26.2-optimized
    build:
      context: ./KEYCLOAK/
      dockerfile: Dockerfile
    depends_on:
      db-keycloak:
        condition: service_healthy
    container_name: keycloak
    secrets:
      - server.crt
      - server.key
      - dbusername
      - dbpassword
      - dbname
      - kcadminusername
      - kcadminpassword
    networks:
      - kcnet
    ports:
      - 8443:8443
      - 9000:9000
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME_FILE: ${KEYCLOAK_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD_FILE: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HTTPS_CERTIFICATE_FILE: ${SSL_CERT_FILE}
      KC_HTTPS_CERTIFICATE_KEY_FILE: ${SSL_KEY_FILE}
      KC_HOSTNAME: ${KEYCLOAK_HOSTNAME}
      KC_HOSTNAME_ADMIN: ${KEYCLOAK_HOSTNAME_ADMIN}
      KC_DB_USERNAME_FILE: ${DB_USERNAME}
      KC_DB_PASSWORD_FILE: ${DB_PASSWORD}
      KC_DB_URL_DATABASE_FILE: ${DB_DATABASE}
      KC_DB_URL_HOST: ${KEYCLOAK_DB_HOST}      
      KC_HOSTNAME_DEBUG: "true"
      KC_LOG_CONSOLE_COLOR: "true"
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: "true"
      KC_PROXY_HEADERS: xforwarded
      KC_HTTP_ENABLED: "true"
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      KC_CACHE: local
    healthcheck:
      test: ["CMD", "/bin/sh", "-c", "echo </dev/tcp/localhost/9000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    command: ["start", "--optimized"]

  db-keycloak:
    image: docker.io/postgis/postgis:16-3.5
    container_name: db-keycloak
    secrets:
      - dbusername
      - dbpassword
      - dbname
    environment:
      POSTGRES_USER_FILE: ${DB_USERNAME}
      POSTGRES_PASSWORD_FILE: ${DB_PASSWORD}
      POSTGRES_DB_FILE: ${DB_DATABASE}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $(cat $POSTGRES_USER_FILE) -d $(cat $POSTGRES_DB_FILE)"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - kcnet
    volumes:
      - db-data:/var/lib/postgresql/data

  nginx:
    image: docker.io/nginx:1.28
    container_name: nginx
    depends_on:
      keycloak:
        condition: service_started
    secrets:
      - server.crt
      - server.key
    environment:
      NGINX_SSL_CERT_FILE: ${SSL_CERT_FILE}
      NGINX_SSL_KEY_FILE: ${SSL_KEY_FILE}
      NGINX_KEYCLOAK_BACKEND_URL: ${KEYCLOAK_BACKEND_URL}
    networks:
      - kcnet
    ports:
      - 443:443
    volumes:
      - ./NGINX/default.conf.template:/etc/nginx/templates/default.conf.template:Z
    command: ["nginx", "-g", "daemon off;"]